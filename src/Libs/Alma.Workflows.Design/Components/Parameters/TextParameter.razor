@using Alma.Workflows.Core.Abstractions
@using Alma.Workflows.Core.Activities.Attributes
@using Alma.Workflows.Core.Description.Descriptors
@using Alma.Workflows.Definitions
@using Microsoft.AspNetCore.Components.Web
@using MudBlazor

<MudTextField Label="@Parameter.DisplayName"
    Value="@Parameterizable.GetParameterValue(Parameter.Name)"
    ValueChanged="@((string s) => HandleValueChanged(s))"
    Variant="Variant.Outlined" Margin="Margin.Dense"
    Disabled="@Disabled"
    AutoGrow="_autoGrow"
    Lines="_lines"
    MaxLines="_maxLines"/>

@code {
    [Parameter]
    public IParameterizableDefinition Parameterizable { get; set; } = null!;

    [Parameter]
    public ParameterDescriptor Parameter { get; set; } = null!;

    [Parameter]
    public EventCallback<ParameterDefinition> ParameterChanged { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    private bool _autoGrow = false;
    private int _lines = 1;
    private int _maxLines = 1;


    protected override void OnInitialized()
    {
        var parameterAttribute = Parameter.Attributes.FirstOrDefault(x => x is ActivityParameterAttribute) as ActivityParameterAttribute;

        if (parameterAttribute is not null)
        {
            _autoGrow = parameterAttribute.AutoGrow;
            _lines = parameterAttribute.Lines;
            _maxLines = parameterAttribute.MaxLines;
        }
    }

    private async Task HandleValueChanged(string value)
    {
        Parameterizable.SetParameterValue(Parameter, value);

        var definition = Parameterizable.GetParameterDefinition(Parameter.Name);

        await ParameterChanged.InvokeAsync(definition);
    }
}
