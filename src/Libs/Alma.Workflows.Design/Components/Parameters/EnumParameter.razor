@using Alma.Workflows.Core.Abstractions
@using Alma.Workflows.Core.Description.Descriptors
@using Alma.Workflows.Definitions
@using Alma.Workflows.Design.Utils
@using EnumsNET;
@using MudBlazor

<MudSelect Label="@Parameter.DisplayName"
           Value="@Parameterizable.GetParameterValue(Parameter.Name)"
           ValueChanged="@((string e) => HandleValueChanged(e))"
           Variant="Variant.Outlined" Margin="Margin.Dense"
           Class="mb-1"
           Style="width: max-content; min-width: 250px;">
    @foreach (var enumItem in EnumUtils.GetItems(Parameter.Type))
    {
        <MudSelectItem Value="@enumItem.Value">@enumItem.Name</MudSelectItem>
    }
</MudSelect>

@code {
    [Parameter]
    public IParameterizableDefinition Parameterizable { get; set; } = null!;

    [Parameter]
    public ParameterDescriptor Parameter { get; set; } = null!;

    [Parameter]
    public EventCallback<ParameterDefinition> ParameterChanged { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    private async Task HandleValueChanged(string value)
    {
        Parameterizable.SetParameterValue(Parameter, value);

        var definition = Parameterizable.GetParameterDefinition(Parameter.Name);

        await ParameterChanged.InvokeAsync(definition);
    }
}
