@using Alma.Modules.Flows.Components.Pages.Activities.Dialogs
@using Alma.Flows.Core.CustomActivities.Entities
@using Alma.Flows.Core.CustomActivities.Services
@using Alma.Flows.Core.CustomActivities.Stores
@using Microsoft.Extensions.DependencyInjection

@inject IServiceScopeFactory ScopeFactory
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudDataGrid @ref="_dataGrid" T="CustomActivityTemplate" ServerData="Load" Elevation="0" Hover="true" Style="width: 100%;">

    <ToolBarContent>
        <MudText Typo="Typo.h6">Atividades personalizadas</MudText>
        <MudSpacer></MudSpacer>
        <MudButton OnClick="CreateCustomActivity" Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.Add" Color="Color.Primary">Criar</MudButton>
    </ToolBarContent>

    <Columns>

        <PropertyColumn Title="Nome" Property="x => x.Name" />
        <PropertyColumn Title="Criada em" Property="x => x.CreatedAt.ToLocalTime()" HeaderStyle="width: 200px;" />
        <PropertyColumn Title="Última atualização" Property="x => x.UpdatedAt.ToLocalTime()" HeaderStyle="width: 200px;" />
        
        <TemplateColumn HeaderStyle="width: 60px;">
            <CellTemplate>
                <MudIconButton Href="@($"/flows/activities/custom/{context.Item.Id}")" Icon="@Icons.Material.Outlined.Edit" Size="MudBlazor.Size.Small" />
            </CellTemplate>
        </TemplateColumn>

    </Columns>

    <NoRecordsContent>Nenhuma atividade personalizada encontrada.</NoRecordsContent>

    <PagerContent>
        <MudDataGridPager T="CustomActivityTemplate" />
    </PagerContent>

</MudDataGrid>

@code {
    #region Parameters

    [CascadingParameter]
    public required Organization Organization { get; set; }

    #endregion

    #region Private fields

    private MudDataGrid<CustomActivityTemplate> _dataGrid = null!;

    #endregion

    private async Task<GridData<CustomActivityTemplate>> Load(GridState<CustomActivityTemplate> state)
    {
        var scope = ScopeFactory.CreateScope();
        var customActivityManager = scope.ServiceProvider.GetRequiredService<ICustomActivityManager>();

        var activities = await customActivityManager.List(state.Page, state.PageSize, new CustomActivityFilters{Discriminator = Organization.Id});

        return new GridData<CustomActivityTemplate> 
        { 
            Items = activities.Items, 
            TotalItems = activities.TotalCount 
        };
    }

    private async Task CreateCustomActivity()
    {
        var parameters = new DialogParameters<CustomActivityCreateDialog>
        {
            { x => x.Organization, Organization }
        };

        var dialog = await DialogService.ShowAsync<CustomActivityCreateDialog>("Criar nova atividade personalizada", parameters);
        var result = await dialog.Result;

        if (result is null || result.Canceled)
            return;

        if (result.Data is CustomActivityTemplate activity)
        {
            await _dataGrid.ReloadServerData();
        }
    }
}
