@page "/Workflows/instances"

@using Alma.Organizations.Entities
@using Alma.Workflows
@using Alma.Workflows.Core.Instances
@using Alma.Workflows.Core.Instances.Entities
@using Alma.Workflows.Core.Instances.Services
@using Alma.Workflows.Core.Instances.Stores
@using Alma.Workflows.Stores.Filters
@using Microsoft.Extensions.DependencyInjection


@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject IServiceScopeFactory ScopeFactory

<Page Title="Instâncias">

    <Tools>
        <MudButton OnClick="CreateInstance" Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.Add" Color="Color.Primary" Class="me-2">Criar</MudButton>
    </Tools>

    <ChildContent>
        <MudDataGrid @ref="_dataGrid"
        T="FlowInstance"
        ServerData="LoadData"
        CurrentPage="(PageIndex ?? 1) - 1"
        RowsPerPage="PageSize ?? 10"
        Elevation="8"
        Hover="true"
        SortMode="SortMode.None">

            <ToolBarContent>
                <MudText Typo="Typo.h6">Lista de instâncias</MudText>
                <MudSpacer></MudSpacer>
                <MudTextField @bind-Value="Name" Placeholder="Buscar pelo nome" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Outlined.Search" OnAdornmentClick="_dataGrid.ReloadServerData" Class="mt-0 me-2"></MudTextField>
            </ToolBarContent>

            <Columns>
                <TemplateColumn Title="Nome">
                    <CellTemplate>
                        @context.Item.Name
                    </CellTemplate>
                </TemplateColumn>

                <TemplateColumn HeaderStyle="width: 60px;">
                    <CellTemplate>
                        <MudIconButton Href="@($"/Workflows/instances/edit/{context.Item.Id}")" Icon="@Icons.Material.Outlined.Edit" Size="MudBlazor.Size.Small" />
                    </CellTemplate>
                </TemplateColumn>
            </Columns>

            <NoRecordsContent>Nenhuma instância criada.</NoRecordsContent>

            <PagerContent>
                <MudDataGridPager T="FlowInstance" />
            </PagerContent>
        </MudDataGrid>
    </ChildContent>
</Page>

@code {

    [CascadingParameter]
    public required Organization Organization { get; set; }

    #region Query Parameters

    [SupplyParameterFromQuery]
    public int? PageIndex { get; set; }

    [SupplyParameterFromQuery]
    public int? PageSize { get; set; }

    [SupplyParameterFromQuery]
    public string? Name { get; set; }

    #endregion

    #region private fields

    private MudDataGrid<FlowInstance> _dataGrid = new MudDataGrid<FlowInstance>();

    #endregion

    private async Task<GridData<FlowInstance>> LoadData(GridState<FlowInstance> state)
    {
        UpdateQueryParameters();

        using var scope = ScopeFactory.CreateScope();
        var service = scope.ServiceProvider.GetRequiredService<IInstanceManager>();

        var filters = new FlowInstanceFilters
            {
                Name = Name,
                Discriminator = Organization.Id
            };

        var result = await service.List(PageIndex ?? 1, PageSize ?? 10, filters);

        return new GridData<FlowInstance>
            {
                Items = result.Items,
                TotalItems = result.TotalCount
            };
    }

    private void UpdateQueryParameters()
    {
        var parameters = new Dictionary<string, object?>
            {
                ["name"] = Name,
                ["pageIndex"] = PageIndex ?? 1,
                ["pageSize"] = PageSize ?? 10,
            };

        NavigationManager.NavigateTo(NavigationManager.GetUriWithQueryParameters(parameters));
    }

    private async Task CreateInstance()
    {
        var parameters = new DialogParameters<InstanceCreateDialog>
        {
            { x => x.Organization, Organization }
        };

        var options = new DialogOptions
            {
                MaxWidth = MaxWidth.Small,
                FullWidth = true
            };

        var dialog = await DialogService.ShowAsync<InstanceCreateDialog>("Criar nova instância", parameters, options);
        var result = await dialog.Result;

        if (result == null || result.Canceled)
            return;

        if (result.Data is not null && result.Data is FlowInstance instance)
            NavigationManager.NavigateTo("/Workflows/instances/edit/" + instance.Id);

    }
}
